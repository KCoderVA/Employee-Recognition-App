{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Package Power App",
			"type": "shell",
			"command": "pac",
			"args": [
				"canvas",
				"pack",
				"--sources",
				"./src/power-apps/EmployeeRecognitionApp_Unpacked",
				"--msapp",
				"./src/power-apps/EmployeeRecognitionApp.msapp"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "üì¶ Package Power App v0.9.0 (Source Control)",
			"type": "shell",
			"command": "pac",
			"args": [
				"canvas",
				"pack",
				"--sources",
				"./src/power-apps/EmployeeRecognitionApp_v0.9.0/Source",
				"--msapp",
				"./releases/v0.9.x/EmployeeRecognitionApp_v0.9.0.msapp"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Unpack Power App",
			"type": "shell",
			"command": "pac",
			"args": [
				"canvas",
				"unpack",
				"--msapp",
				"./src/power-apps/EmployeeRecognitionApp.msapp",
				"--sources",
				"./src/power-apps/EmployeeRecognitionApp_Unpacked"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Open Project Documentation",
			"type": "shell",
			"command": "code",
			"args": [
				"./PROJECT_MIGRATION_PLAN.md"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "silent",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Generate Project Report",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Get-ChildItem -Recurse | Group-Object Extension | Sort-Object Count -Descending | Format-Table Name, Count -AutoSize"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new"
			}
		},
		{
			"label": "Backup Project",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$date = Get-Date -Format 'yyyy-MM-dd_HHmm'; Compress-Archive -Path './src', './docs', './assets' -DestinationPath \"./archive/backup_$date.zip\" -Force; Write-Host \"Backup created: backup_$date.zip\""
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Show Active Extensions",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'Power Platform Workspace - Active Extensions:' -ForegroundColor Green; Write-Host ''; code --list-extensions | Where-Object { $_ -notmatch 'ms-vscode.cmake|ms-vscode.cpp|redhat.java|ms-toolsai|ms-python|gerhardbrueckl.powerbi|analysis-services|ms-mssql|ms-vscode.live-server|github.codespaces|github.remotehub|github.vscode-pull-request|ms-vscode.azure-repos|ms-vscode.remote-repositories|visualstudioexptteam.intellicode' } | ForEach-Object { Write-Host \"‚úÖ $_\" -ForegroundColor Cyan }; Write-Host ''; Write-Host 'Disabled Extensions (workspace-specific):' -ForegroundColor Yellow; code --list-extensions | Where-Object { $_ -match 'ms-vscode.cmake|ms-vscode.cpp|redhat.java|ms-toolsai|ms-python|gerhardbrueckl.powerbi|analysis-services|ms-mssql|ms-vscode.live-server|github.codespaces|github.remotehub|github.vscode-pull-request|ms-vscode.azure-repos|ms-vscode.remote-repositories|visualstudioexptteam.intellicode' } | ForEach-Object { Write-Host \"‚ùå $_\" -ForegroundColor Red }"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new"
			}
		},
		{
			"label": "Initialize Git Repository",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"if (!(Test-Path .git)) { git init; Write-Host 'Git repository initialized' -ForegroundColor Green; git add .; git commit -m 'Initial commit - Employee Recognition workspace setup'; Write-Host 'Initial commit created' -ForegroundColor Green } else { Write-Host 'Git repository already exists' -ForegroundColor Yellow }"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Create Git Ignore for Power Platform",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$gitignore = @'`n# Power Platform specific`n*.msapp`nConnections/`nDataSources/`nother/`n`n# VS Code`n.vscode/launch.json`n.vscode/settings.json.bak`n`n# Temporary files`n*.tmp`n*.temp`n`n# Archive and backup files`n*.bak`n*.backup`n`n# OS generated files`n.DS_Store`n.DS_Store?`nThumbs.db`nehthumbs.db`n`n# Solution files (keep source, ignore binary)`n*.zip.bak`n'@; Set-Content -Path '.gitignore' -Value $gitignore; Write-Host 'Power Platform .gitignore created' -ForegroundColor Green"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Update CHANGELOG (Required Before Commit)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/update-changelog.ps1"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "Safe Commit with CHANGELOG Check",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/safe-commit.ps1"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": [],
			"dependsOrder": "sequence",
			"dependsOn": "Repository Health Check"
		},
		{
			"label": "Repository Health Check",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/repo-health-check.ps1",
				"-Detailed"
			],
			"group": "test",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "üìã Validate CHANGELOG (Comprehensive)",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/validate-changelog.ps1",
				"-Detailed",
				"-ShowStatus"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": [],
			"runOptions": {
				"runOn": "default"
			}
		},
		{
			"label": "üìù Update CHANGELOG (Required Before Commit)",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/update-changelog.ps1",
				"-Interactive"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": [],
			"runOptions": {
				"runOn": "default"
			}
		},
		{
			"label": "üõ°Ô∏è Safe Commit with CHANGELOG Check",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/safe-commit.ps1",
				"-Interactive"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": [],
			"runOptions": {
				"runOn": "default"
			}
		},
		{
			"label": "üîç Repository Health Check",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/repo-health-check.ps1",
				"-Detailed"
			],
			"group": "test",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üöÄ Prepare Release",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/prepare-release.ps1",
				"-Interactive"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üîß Fix CHANGELOG Format",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/validate-changelog.ps1",
				"-Fix"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üßπ Clean Workspace (Auto Before Commit)",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/workspace-cleanup.ps1"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üßπ Clean Workspace (Dry Run Preview)",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/workspace-cleanup.ps1",
				"-DryRun",
				"-Verbose"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üåê Open Power Apps Web Portal",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'üåê Opening Power Apps web portal...' -ForegroundColor Cyan; Write-Host ''; Write-Host 'üìã Quick Web Workflow Reminder:' -ForegroundColor Yellow; Write-Host '  1. Import canvas app (if uploading new .msapp)' -ForegroundColor White; Write-Host '  2. Edit and test in web editor' -ForegroundColor White; Write-Host '  3. Export app when satisfied' -ForegroundColor White; Write-Host '  4. Unpack exported .msapp for source control' -ForegroundColor White; Write-Host ''; Start-Process 'https://make.powerapps.com/'"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": false,
				"clear": false
			}
		},
		{
			"label": "üìÅ Open App Source in VS Code",
			"type": "shell",
			"command": "code",
			"args": [
				"./src/power-apps/EmployeeRecognitionApp_v0.9.0/Source"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "silent",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "üìã Show Web Development Quick Reference",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'üé® Power Apps Web Development Quick Reference' -ForegroundColor Green; Write-Host ''; Write-Host 'üìù DEVELOPMENT CYCLE:' -ForegroundColor Yellow; Write-Host '  1. Edit source code (.fx.yaml files) in VS Code' -ForegroundColor White; Write-Host '  2. Package to .msapp using VS Code task' -ForegroundColor White; Write-Host '  3. Upload .msapp to https://make.powerapps.com manually' -ForegroundColor White; Write-Host '  4. Test and validate in Power Apps web editor' -ForegroundColor White; Write-Host '  5. Export updated .msapp when satisfied' -ForegroundColor White; Write-Host '  6. Unpack exported .msapp for next development cycle' -ForegroundColor White; Write-Host ''; Write-Host 'üìÇ KEY FOLDERS:' -ForegroundColor Yellow; Write-Host '  ‚Ä¢ Source Code: src/power-apps/EmployeeRecognitionApp_v0.9.0/Source/' -ForegroundColor Cyan; Write-Host '  ‚Ä¢ Packaged Apps: releases/v0.9.x/' -ForegroundColor Cyan; Write-Host '  ‚Ä¢ Documentation: src/power-apps/EmployeeRecognitionApp_v0.9.0/README.md' -ForegroundColor Cyan; Write-Host ''; Write-Host '‚ö†Ô∏è  WEB-ONLY LIMITATIONS:' -ForegroundColor Red; Write-Host '  ‚Ä¢ No direct save from web to source control' -ForegroundColor White; Write-Host '  ‚Ä¢ Manual import required (no automated deployment)' -ForegroundColor White; Write-Host '  ‚Ä¢ Desktop Power Apps Studio unavailable' -ForegroundColor White; Write-Host ''; Write-Host '‚úÖ Use VS Code tasks for packaging and portal access!' -ForegroundColor Green"
			},
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üöÄ Power Apps Web Development Helper",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./scripts/powerapps-web.ps1",
				"help"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üìñ Open Power Apps Web Reference",
			"type": "shell",
			"command": "code",
			"args": [
				"./docs/POWER_APPS_WEB_REFERENCE.md"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "silent",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "üöÄ Launch Repository Manager",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"./repository_manager/GitHub-Repository-Manager.ps1"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new",
				"showReuseMessage": false,
				"clear": true
			},
			"problemMatcher": []
		},
		{
			"label": "üîç Check Repository Status",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'üîç Repository Status Check' -ForegroundColor Green; Write-Host ''; git status --porcelain -b; Write-Host ''; Write-Host 'üìä File Count Summary:' -ForegroundColor Cyan; git ls-files | Measure-Object | Select-Object Count; Write-Host ''; Write-Host 'üîÑ Recent Commits:' -ForegroundColor Cyan; git log --oneline -5"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "üåê Open GitHub Repository",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Start-Process 'https://github.com/KCoderVA/Employee-Recognition-App'"
			],
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "silent"
			}
		},
		{
			"label": "üìã Validate CHANGELOG",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'üìã CHANGELOG Validation' -ForegroundColor Green; if (Test-Path 'CHANGELOG.md') { Write-Host '‚úÖ CHANGELOG.md exists' -ForegroundColor Green; $content = Get-Content 'CHANGELOG.md' -Raw; if ($content -match '\\[0\\.9\\.0\\]') { Write-Host '‚úÖ Current version documented' -ForegroundColor Green } else { Write-Host '‚ö†Ô∏è  Current version may need documentation' -ForegroundColor Yellow } } else { Write-Host '‚ùå CHANGELOG.md not found' -ForegroundColor Red }"
			],
			"group": "build"
		}
	]
}
